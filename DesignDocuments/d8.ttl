
@prefix : <https://w3id.org/ldpdl/#> .
@prefix data: <http://opensensingcity.emse.fr/LDPDesign/data/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ldp: <http://www.w3.org/ns/ldp#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

data:resourcesCM a :NullContainerMap;
    :slugTemplate "resources";
    :containerMap data:classCM;
.

data:classCM a :ContainerMap;
    :slugQueryTemplate "{BIND(str(?{res}) as ?nres) BIND(if(contains(?nres, '#'),true,false) as ?hash) BIND(SUBSTR(?nres,STRLEN(?nres),1) as ?lstr) BIND(if(?lstr='/',SUBSTR(?nres,0,STRLEN(?nres)),?nres) as ?fres) BIND(if(?hash,REPLACE(?fres,'.*#',''),REPLACE(?fres,'.*/','')) as ?template)}";
    :resourceMap data:classRM;
    :nonContainerMap data:subclasseCM;
    :nonContainerMap data:instanceCM;
.

data:classRM a :ResourceMap;
    :resourceQuery "{ ?x a ?{res} .}";
    :graphQuery "CONSTRUCT { ?{res} ?p ?o . } WHERE {  ?{res} ?p ?o . }" .

data:instanceCM a :NonContainerMap;
    :slugQueryTemplate "{BIND(str(?{res}) as ?nres) BIND(if(contains(?nres, '#'),true,false) as ?hash) BIND(SUBSTR(?nres,STRLEN(?nres),1) as ?lstr) BIND(if(?lstr='/',SUBSTR(?nres,0,STRLEN(?nres)),?nres) as ?fres) BIND(if(?hash,REPLACE(?fres,'.*#',''),REPLACE(?fres,'.*/','')) as ?template)}";
    :resourceMap data:instanceRM .

data:instanceRM a :ResourceMap;
    :resourceQuery "{ ?{res} rdf:type ?{parent} . }";
    :graphQuery "CONSTRUCT { ?{res} ?p ?o . } WHERE {  ?{res} ?p ?o . }" .

data:subclassCM a :ContainerMap;
    :slugQueryTemplate "{BIND(str(?{res}) as ?nres) BIND(if(contains(?nres, '#'),true,false) as ?hash) BIND(SUBSTR(?nres,STRLEN(?nres),1) as ?lstr) BIND(if(?lstr='/',SUBSTR(?nres,0,STRLEN(?nres)),?nres) as ?fres) BIND(if(?hash,REPLACE(?fres,'.*#',''),REPLACE(?fres,'.*/','')) as ?template)}";
    :resourceMap data:subClassRM;
    :nonContainerMap data:instancesCM;
    :containerMap data:subclassCM .

data:subClassRM a :ResourceMap;
    :resourceQuery "{ ?{res} rdfs:subClassOf ?{parent} .}";
    :graphQuery "CONSTRUCT { ?{res} ?p ?o . } WHERE {  ?{res} ?p ?o . }" .


